#

toolbarMenuScripts(
	name='OMG Tool Infrastructure'
	scripts {		
		MainToolbarMenuAction(
			toolbarMenuPath: { 'OMG > Migration Support' }
			name: 'Change XMI:IDs per project migration.xmi'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
			class: org.omg.oti.magicdraw.scripts.changePackageExtentIDs
			method: doit )
		MainToolbarMenuAction(
			toolbarMenuPath: { 'OMG > Migration Support' }
			name: 'Open Local Project (skipping local module)'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
			class: org.omg.oti.magicdraw.scripts.openLocalProjectSkipLocalModule
			method: doit )
		MainToolbarMenuAction(
			toolbarMenuPath: { 'OMG > Migration Support' }
			name: 'Migrate Package Extent xmi:ids (choose migration file, convertOnlyIncomingReferences=true)'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
			class: org.omg.oti.magicdraw.scripts.MigrationHelper
			method: customMigration )
		MainToolbarMenuAction(
			toolbarMenuPath: { 'OMG > Migration Support' }
			name: 'Name Test'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
			class: org.omg.oti.magicdraw.scripts.nameTest
			method: doit )
	})
	
dynamicScripts(
      name='OMG Tool Infrastructure'
      [ m: Association ]
      scripts {        
          DiagramContextMenuAction(
              name: 'Set names of link instances of selected Associations (r/w)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.nameAssociationLinkInstancesWithinPackageExtent
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Set names of link instances of selected Associations (r/o)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.nameAssociationLinkInstancesWithinPackageExtent
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Inspect Associations (r/w)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.inspectAssociations
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Inspect Associations (r/o)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.inspectAssociations
              method: doit
          )
      })
      
dynamicScripts(
      name='OMG Tool Infrastructure'
      [ m: Association ]
      scripts {
          
          BrowserContextMenuAction(
              name: 'Set names of link instances of selected Associations (r/w)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              class: org.omg.oti.magicdraw.scripts.nameAssociationLinkInstancesWithinPackageExtent
              method: doit
          )
          BrowserContextMenuAction(
              name: 'Set names of link instances of selected Associations (r/o)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.nameAssociationLinkInstancesWithinPackageExtent
              method: doit
          )
          BrowserContextMenuAction(
              name: 'Inspect Associations (r/w)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              class: org.omg.oti.magicdraw.scripts.inspectAssociations
              method: doit
          )
          BrowserContextMenuAction(
              name: 'Inspect Associations (r/o)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.inspectAssociations
              method: doit
          )
    })
   
dynamicScripts(
      name='OMG Tool Infrastructure'
      [ m: Package ]
      scripts {          
          BrowserContextMenuAction(
              name: 'Generate OTI Canonical XMI:IDs for selected Package extents'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.generateIDsForPackageExtents
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Generate OTI Canonical XMI:IDs for selected Package extents'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.generateIDsForPackageExtents
              method: doit
          )
          BrowserContextMenuAction(
              name: 'Set OTI xmi:uuids for Package Extent'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.setOTIUUIDs
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Set OTI xmi:uuids for Package Extent'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.setOTIUUIDs
              method: doit
          )
        	  BrowserContextMenuAction(
              name: 'Migrate Package Extent xmi:ids (convertOnlyIncomingReferences=false)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.migratePackageExtentIDs
              method: doit 
          )
        	  DiagramContextMenuAction(
              name: 'Migrate Package Extent xmi:ids (convertOnlyIncomingReferences=false)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.migratePackageExtentIDs
              method: doit 
          )
          BrowserContextMenuAction(
              name: 'Generate Catalog URI Mapping for built-in Document Package'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.generateCatalogURIMappingForBuiltInDocument
              method: doit
          )                   
          BrowserContextMenuAction(
              name: 'Add PackageImports for nested packages'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.addPackageImportsForNestedPackages
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Add PackageImports for nested packages'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.addPackageImportsForNestedPackages
              method: doit
          )
          BrowserContextMenuAction(
              name: 'Export Selected Packages to OMG TI Canonical XMI'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.exportPackageExtents2OTICanonicalXMI
              method: doit
          )          
          DiagramContextMenuAction(
              name: 'Export Selected Packages to OMG TI Canonical XMI'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.exportPackageExtents2OTICanonicalXMI
              method: doit
          )          
          DiagramContextMenuAction(
              name: 'Check each selected package references only accessible members (except nesting packages and applied profiles)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkEachSelectedPackageReferencesOnlyAccessibleMembers
              method: doitExceptNestingPackagesAndAppliedProfiles
          )   
          DiagramContextMenuAction(
              name: 'Check each selected package references only accessible members (including nesting packages and applied profiles)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkEachSelectedPackageReferencesOnlyAccessibleMembers
              method: doitIncludingNestingPackagesAndAppliedProfiles
          )   
          DiagramContextMenuAction(
              name: 'Check primary package selection for missing imports of nested packages'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkPackageForImportsOfNestedPackages
              method: doit
          )   
          DiagramContextMenuAction(
              name: 'Check primary package selection can access secondary package selection'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkPrimaryPackageSelectionCanAccessSecondaryPackageSelection
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Check primary package selection cannot access secondary package selection'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkPrimaryPackageSelectionCannotAccessSecondaryPackageSelection
              method: doit
          )          
          DiagramContextMenuAction(
              name: 'Check primary package selection can access secondary profile selection'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkPrimaryPackageSelectionCanAccessSecondaryProfileSelection
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Check primary package selection cannot access secondary profile selection'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkPrimaryPackageSelectionCannotAccessSecondaryProfileSelection
              method: doit
          )          
          DiagramContextMenuAction(
              name: 'Check primary package selection does not reference members of secondary package selection'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkPrimaryPackageSelectionDoesNotReferenceMembersOfSecondaryPackageSelection
              method: doit
          )   
})
          
dynamicScripts(
      name='OMG Tool Infrastructure'
      [ m: Model ]
      scripts {
          BrowserContextMenuAction(
              name: 'Generate Catalog URI Mapping for built-in Document Model'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.generateCatalogURIMappingForBuiltInDocument
              method: doit
          )         
})

dynamicScripts(
      name='OMG Tool Infrastructure'
      [ m: Profile ]
      scripts {    
          BrowserContextMenuAction(
              name: 'Generate OTI Canonical XMI:IDs for selected Profile extents'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.generateIDsForPackageExtents
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Generate OTI Canonical XMI:IDs for selected Package extents'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.generateIDsForPackageExtents
              method: doit
          )
          BrowserContextMenuAction(
              name: 'Set OTI xmi:uuids for Profile Extent'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.setOTIUUIDs
              method: doit
          )
          DiagramContextMenuAction(
              name: 'Set OTI xmi:uuids for Profile Extent'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.setOTIUUIDs
              method: doit
          )
        	  BrowserContextMenuAction(
              name: 'Migrate Profile Extent xmi:ids (convertOnlyIncomingReferences=false)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.migratePackageExtentIDs
              method: doit 
          )
        	  DiagramContextMenuAction(
              name: 'Migrate Profile Extent xmi:ids (convertOnlyIncomingReferences=false)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.migratePackageExtentIDs
              method: doit 
          )
          BrowserContextMenuAction(
              name: 'Generate Catalog URI Mapping for built-in Document Profile'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.generateCatalogURIMappingForBuiltInDocument
              method: doit
          )                        
          BrowserContextMenuAction(
              name: 'Add PackageImports for nested packages'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.addPackageImportsForNestedPackages
              method: doit
          )                  
          DiagramContextMenuAction(
              name: 'Add PackageImports for nested packages'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/w
              class: org.omg.oti.magicdraw.scripts.addPackageImportsForNestedPackages
              method: doit
          )    
          BrowserContextMenuAction(
              name: 'Export Selected Profiles to OMG TI Canonical XMI'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.exportPackageExtents2OTICanonicalXMI
              method: doit
          )       
          DiagramContextMenuAction(
              name: 'Export Selected Profiles to OMG TI Canonical XMI'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.exportPackageExtents2OTICanonicalXMI
              method: doit
          )          
          DiagramContextMenuAction(
              name: 'Check each selected profile references only accessible members (except nesting packages and applied profiles)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkEachSelectedPackageReferencesOnlyAccessibleMembers
              method: doitExceptNestingPackagesAndAppliedProfiles
          )   
          DiagramContextMenuAction(
              name: 'Check each selected profile references only accessible members (including nesting packages and applied profiles)'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkEachSelectedPackageReferencesOnlyAccessibleMembers
              method: doitIncludingNestingPackagesAndAppliedProfiles
          )   
          DiagramContextMenuAction(
              name: 'Check primary profile selection for missing imports of nested packages'
              project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.checkPackageForImportsOfNestedPackages
              method: doit
          )   
})

characterization(
	name='Element (OMG Tool Infrastructure)'
	[ m: Element ]
	features {		
		EarlyDerivedWidget(
			name: 'OTI Element::allOwnedElementsWithinPackageScope'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.ElementInspectorWidget
            method: allOwnedElementsWithinPackageScope
        )
		EarlyDerivedWidget(
			name: 'OTI Element::packageOrProfileOwner'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.ElementInspectorWidget
            method: packageOrProfileOwner
        )
	})
characterization(
	name='NamedElement (OMG Tool Infrastructure)'
	[ m: NamedElement ]
	features {		
		EarlyDerivedWidget(
			name: 'OTI NamedElement::allNamespaces'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamedElementInspectorWidget
            method: allNamespaces
        )
		EarlyDerivedWidget(
			name: 'OTI NamedElement::owningPackage'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamedElementInspectorWidget
            method: owningPackage
        )
		EarlyDerivedWidget(
			name: 'OTI NamedElement::allOwningPackages'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamedElementInspectorWidget
            method: allOwningPackages
        )
	})
	
characterization(
	name='Namespace (OMG Tool Infrastructure)'
	[ m: Namespace ]
	features {	
		EarlyDerivedWidget(
			name: 'OTI Namespace::importedPackages'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamespaceInspectorWidget
            method: importedPackages
        )
		EarlyDerivedWidget(
			name: 'OTI Namespace::allImportedPackagesTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamespaceInspectorWidget
            method: allImportedPackagesTransitively
        )        
		EarlyDerivedWidget(
			name: 'OTI Namespace::importedMembers'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamespaceInspectorWidget
            method: importedMembers
        )
		EarlyDerivedWidget(
			name: 'OTI Namespace::visibleMembers'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamespaceInspectorWidget
            method: visibleMembers
        )
		EarlyDerivedWidget(
			name: 'OTI Namespace::allVisibleMembersTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamespaceInspectorWidget
            method: allVisibleMembersTransitively
        )
		EarlyDerivedWidget(
			name: 'OTI Namespace::allVisibleMembersAccessibleTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.NamespaceInspectorWidget
            method: allVisibleMembersAccessibleTransitively
        )
    })
    
characterization(
	name='Package (OMG Tool Infrastructure)'
	[ m: Package ]
	features {
		EarlyDerivedWidget(
			name: 'OTI Package::nonImportedNestedPackages'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: nonImportedNestedPackages
        )        
		EarlyDerivedWidget(
			name: 'OTI Package::allNestedPackages'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allNestedPackages
        )        
		EarlyDerivedWidget(
			name: 'OTI Package::allNestingPackagesTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allNestingPackagesTransitively
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allDirectlyImportedPackagesIncludingNestingPackagesTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allDirectlyImportedPackagesIncludingNestingPackagesTransitively
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allApplicableStereotypes'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allApplicableStereotypes
        )
		EarlyDerivedWidget(
			name: 'OTI Package::containingProfile'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: containingProfile
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allDirectlyAppliedProfilesExceptNestingPackages'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allDirectlyAppliedProfilesExceptNestingPackages
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allDirectlyAppliedProfilesIncludingNestingPackagesTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allDirectlyAppliedProfilesIncludingNestingPackagesTransitively
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allDirectlyVisibleMembersTransitivelyAccessibleExceptNestingPackagesAndAppliedProfiles'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allDirectlyVisibleMembersTransitivelyAccessibleExceptNestingPackagesAndAppliedProfiles
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allIndirectlyAppliedProfilesIncludingNestingPackagesTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allIndirectlyAppliedProfilesIncludingNestingPackagesTransitively
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allForwardReferencesToImportablePackageableElementsFromAllOwnedElementsTransitively'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allForwardReferencesToImportablePackageableElementsFromAllOwnedElementsTransitively
        )
		EarlyDerivedWidget(
			name: 'OTI Package::allIndirectlyVisibleMembersTransitivelyAccessibleFromNestingPackagesAndAppliedProfiles'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: allIndirectlyVisibleMembersTransitivelyAccessibleFromNestingPackagesAndAppliedProfiles
        )
		EarlyDerivedWidget(
			name: 'OTI Package::forwardReferencesToPackagesOrProfiles'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: forwardReferencesToPackagesOrProfiles
        )
		EarlyDerivedWidget(
			name: 'OTI Package::forwardReferencesBeyondPackageScope'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.PackageInspectorWidget
            method: forwardReferencesBeyondPackageScope
        )
	})

characterization(
	name='Profile (OMG Tool Infrastructure)'
	[ m: Profile ]
	features {	        
		EarlyDerivedProperty(
			name: 'OTI Profile::allImportedProfiles'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.ProfileInspectorWidget
            method: allImportedProfiles
        )
        
		EarlyDerivedProperty(
			name: 'OTI Profile::allNestedProfiles'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.ProfileInspectorWidget
            method: allNestedProfiles
        )
        
		EarlyDerivedProperty(
			name: 'OTI Profile::allVisibleProfiles'
			project: org.omg.oti.magicdraw
            dependencies: { org.omg.oti }
            access: r/o
            class: org.omg.oti.magicdraw.ui.ProfileInspectorWidget
            method: allVisibleProfiles
        )
	})

dynamicScripts(
      name='OTI MagicDraw DynamicScripts'
      [ m: InstanceSpecification, c: '*::DiagramContextMenuActionForSelection' ]
      scripts {      
          DiagramContextMenuAction(
              name: 'Invoke DynamicScript as diagram context-menu action for selection'
			  project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.invokeDiagramContextMenuActionForSelection
              method: doit
          )
      })
      
dynamicScripts(
      name='OTI MagicDraw DynamicScripts'
      [ m: InstanceSpecification, c: '*::MainToolbarMenuAction' ]
      scripts {      
          DiagramContextMenuAction(
              name: 'Invoke DynamicScript as main toolbar menu action'
			  project: org.omg.oti.magicdraw
              dependencies: { org.omg.oti }
              access: r/o
              class: org.omg.oti.magicdraw.scripts.invokeMainToolbarMenuAction
              method: doit
          )
      })
      